create table Director
(
    director_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        varchar(100) UNIQUE,
    age         int check ( age > 10 ) check ( age < 99 )
);

create table Movie
(
    movie_id           int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    director_id        int          NOT NULL REFERENCES director (director_id),
    name               varchar(200) NOT NULL,
    year_of_production int check ( year_of_production > 1900 )
);
INSERT INTO director(name, age)
VALUES ('Quentin Tarantino', 57);
INSERT INTO director(name, age)
VALUES ('Martin Scorsese', 78);
INSERT INTO director(name, age)
VALUES ('Gay Ritchie', 52);
INSERT INTO director(name, age)
VALUES ('Woody Allen', 85);
INSERT INTO director(name, age)
VALUES ('David Lynch', 74);
INSERT INTO director(name, age)
VALUES ('Christofer Nolan', 50);



insert into movie(director_id, name, year_of_production)
values (1, 'Reservoir Dogs', 1992);
insert into movie(director_id, name, year_of_production)
values (1, 'Pulp Fiction', 1994);
insert into movie(director_id, name, year_of_production)
values (1, 'The Hateful Eight', 2015);
insert into movie(director_id, name, year_of_production)
values (1, 'Once Upon a Time in Hollywood ', 2019);
insert into movie(director_id, name, year_of_production)
values (2, 'Taxi Driver', 1976);
insert into movie(director_id, name, year_of_production)
values (2, 'Goodfellas', 1990);
insert into movie(director_id, name, year_of_production)
values (2, 'The Wolf of Wall Street', 2013);
insert into movie(director_id, name, year_of_production)
values (3, 'Lock, Stock and Two Smocking Barrels', 1998);
insert into movie(director_id, name, year_of_production)
values (3, 'Snatch', 2000);
insert into movie(director_id, name, year_of_production)
values (4, 'Midnight in Paris', 2011);
insert into movie(director_id, name, year_of_production)
values (6, 'Inception', 2010);


select * from director left join movie m on director.director_id = m.director_id;
select * from director join movie m on director.director_id = m.director_id;

select director.name,movie.name from director  join movie on director.director_id = movie.director_id;
select director.name,movie.name from director left join movie on director.director_id = movie.director_id;
/*_________________________________________________________________*/


 /*one to one*/
create table Citizen(
                        citizen_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
                        name varchar(100) not null ,
                        age int check ( age>0 ) check ( age<100 )
);

create table Passport(
                         citizen_id int PRIMARY KEY REFERENCES citizen(citizen_id),
                         passport_number int
);

insert into citizen(name, age) VALUES ('Bob',12);
insert into citizen(name, age) VALUES ('Mike',24);
insert into citizen(name, age) VALUES ('Eshli',39);
insert into citizen(name, age) VALUES ('Tom',45);

insert into passport(citizen_id, passport_number) VALUES (1, 12345);
insert into passport(citizen_id, passport_number) VALUES (2, 53246);
insert into passport(citizen_id, passport_number) VALUES (3, 178942);
insert into passport(citizen_id, passport_number) VALUES (4, 1598777);


select citizen.name, passport_number
from citizen
         join passport on citizen.citizen_id = passport.citizen_id;

/*____________________________________________________________________________*/


/*many to many*/

create table Actor(
                      actor_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
                      name varchar(100) not null ,
                      age int check ( age>0 )
);

insert into actor(name, age) VALUES ('Harvey Keitel',81);
insert into actor(name, age) VALUES ('Robert De Niro',77);
insert into actor(name, age) VALUES ('Leonardo DiCaprio',46);
insert into actor(name, age) VALUES ('Jason Statham',53);
insert into actor(name, age) VALUES ('Joe Pesci',77);
insert into actor(name, age) VALUES ('Samuel L. Jackson',72);



create table Actor_Movie(
                            actor_id int REFERENCES actor(actor_id),
                            movie_id int REFERENCES movie(movie_id),
                            PRIMARY KEY (actor_id, movie_id)
);

insert into actor_movie(actor_id, movie_id) VALUES (1,1);
insert into actor_movie(actor_id, movie_id) VALUES (1,2);
insert into actor_movie(actor_id, movie_id) VALUES (2,5);
insert into actor_movie(actor_id, movie_id) VALUES (2,6);
insert into actor_movie(actor_id, movie_id) VALUES (3,4);
insert into actor_movie(actor_id, movie_id) VALUES (3,7);
insert into actor_movie(actor_id, movie_id) VALUES (3,11);
insert into actor_movie(actor_id, movie_id) VALUES (4,8);
insert into actor_movie(actor_id, movie_id) VALUES (4,9);
insert into actor_movie(actor_id, movie_id) VALUES (5,6);
insert into actor_movie(actor_id, movie_id) VALUES (6,2);
insert into actor_movie(actor_id, movie_id) VALUES (6,3);


select * from actor join actor_movie am on actor.actor_id = am.actor_id join movie on am.movie_id = movie.movie_id;

select actor.name,movie.name from actor join actor_movie am on actor.actor_id = am.actor_id join movie on am.movie_id = movie.movie_id;

/*____________________________________*/
/*index on db*/

/*CREATE INDEX on Actor(age) Using FK/B-Tree*/;
/*____________________________________*/
/*Delete foreign keys*/

/*user_id int REFERENCE Person(user_id) On Delete  Cascade/set null/restrict(по умолчанию)*/



create table Person1(
                        user_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
                        name varchar(100) not null ,
                        age int
);
create table Order1(
                       order_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
                       user_id int REFERENCES Person1(user_id) on delete set null ,
                       item_name varchar(100)
);

insert into Person1(name, age) VALUES ('Tom', 30);
insert into Order1(user_id, item_name)
values (1, 'Iphone');

delete from person1 where user_id=1;
select *from Person1;
select *from Order1;
drop table order1;
drop table person1;
